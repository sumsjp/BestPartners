大家好，这里是最佳拍档，我是大飞
今天我们来聊聊 Github
现如今
GitHub早已经成为所有码农必备的专业网站了
可是GitHub当初为什么能从一个小网站崛起
而且在这么多年的发展中
不但没有被一个接一个的竞争对手击倒
反而越来越兴盛呢？
今天大飞就带着大家看一看
GitHub创始人之一的斯科特
是如何看待GitHub的这二十年吧
时间回到2005年
那个时候的软件开发环境是怎么样的呢？
斯科特介绍说
如果你在 2005 年是一名软件开发人员
很可能是在使用像 Subversion
也称为 SVN这样的集中式版本控制系统
客观来说，SVN的用户界面和使用体验
可以说比GitHub更加简单
但是在当时
一个还没被认为是问题的问题
逐渐开始在SVN上显现了，那就是开源
与今天相比
开源在那个时期几乎没人提起
甚至“开源”这个词都是在1998年才被创造出来的
在此之前的网络世界里
不开源是占绝对多数
2008年的一篇论文显示
当时全球大约有一万八千个活跃的开源项目
而这个数目在2005年只会更低
到如今
仅仅在GitHub 上就有超过2.8亿个公共代码库
在SVN 的时代
想要为一个开源项目贡献代码
是一件非常麻烦的事
SVN服务器通常被设置成
没有经过身份验证的用户只有只读权限
这就意味着如果你想给项目贡献代码
必须先将整个项目的代码 checkout 到本地
然后才能进行修改
修改完成以后
你还需要手动生成补丁文件
再通过项目的工单系统或者邮件列表
提交给开源项目的维护者
然后维护者需要拉取补丁文件
将补丁应用到他们的项目中
看看是否可以正常应用或是否正常工作
最后再提交反馈，做出或者提交更改
因为这个过程实在是太繁琐了
所以几乎所有人都希望能有所改进
这样带来的机会是
一旦有简化的工具出现后
就会被迅速的广泛采用
而那个工具就是如今GitHub的前身
Git
Git诞生的直接原因
实际上是源于林纳斯·托瓦兹（Linus Torvalds）当时非常喜欢的一个商业版本控制系统BitKeeper
它最初是为了帮助简化操作系统内核开发流程而设计的
如果BitKeeper是开源的
或者拥有更友好的许可条款
可能就不会有Git什么事了
然而，当时的实际情况是
一位Linux开发者对BitKeeper的协议进行了逆向工程
违反了许可条款
随后
BitKeeper和Linus之间发生了争执
双方都认为对方的行为是不可接受的
于是决定分道扬镳
后来林纳斯借鉴了BitKeeper的一些启发性概念
拼凑出了他认为能够解决自己问题的最简单的工具
并将其命名为Git
这个被称为“来自地狱的信息管理器”，
很快就被Linux社区的一些人采用
并且慢慢发展成为一个完整的版本控制系统
在当时，因为 Git的速度足够快
权限管理也不像SVN那样复杂
不需要通过网络和中央服务器
协商代码提交
简直方便得让用户们难以置信
更重要的是
作者可以托管自己的代码库副本
并且拥有自己的写入权限
有些人认为开发者之所以喜欢 Git
是因为它具有分布式的特性
克隆代码库时能够得到整个历史记录
并且在本地进行分享
但是斯科特不认同这种看法
实际上
分布式特点之所以被开发者喜欢
是因为开发者可以快速托管完整可写入的fork副本
这让权限管理变得简单得多
并且将代码贡献从一个谁有权限推送的问题
变成了谁有有趣的东西可以拉取的问题
以前
谁想分享一个有趣的内容都需要层层通过审核
而在 Git 上则方便了很多
最开始的时候
虽然Git本身使用起来很方便
但是将其他团队成员加到内部服务器的过程却相当繁琐
因为Git主要通过SSH协议进行通信
这要求在服务器上
为每位成员创建具有SSH访问权限的账户
这个过程不仅复杂
而且对于大多数团队成员来说
也不值得
Git很棒，但是托管Git却很麻烦
这就是为什么要做GitHub的原因
2007年
GitHub的另一位联合创始人汤姆来找到了斯科特
当时他们提出了一点创新
那就是以用户为中心
而不是以项目为中心
在那之前
如果谁想在Sourceforge 或者类似的平台上托管项目
通常需要先注册一个项目的名字
而在GitHub上
用户可以自由使用任何你想要的名字
因为项目是直接与你的账户关联的
这样也避免了一个人同时更新不同项目
可能会带来的麻烦
可是
作为在当时并不算少见的分布式版本控制系统
Git并没有特别明显的突出优势
比方说Mercurial在很多方面都与Git很相似
甚至在很多方面都做得更好
那么为什么是 Git赢了这场竞争呢？
斯科特觉得原因有两点
第一点是因为Linux 和林纳斯
第二点就是因为GitHub
因为 Linux 项目使用了 Git
给了Git足够的可信度
每个人都知道 Linux
每个人也都知道林纳斯
既然他可以开发一个每个人都在使用的操作系统
当然也有能力开发下一代的版本控制系统
即使这个系统可能对一些人来说难以使用
但也许是因为他的智慧超越了我们普通人
所以我们应该更加努力得跟随他
这样狂热的想法虽然听起来有些胡来
但是不得不说
林纳斯的宣传确实给Git提供了巨大的帮助
如果将林纳斯本人和Linux混为一谈的话
甚至可以说
就是林纳斯促成了Git的普及
斯科特表示
自己很难评价自己和GitHub在幕后所做的努力
与自己所获得的那些成功
到底有多大关系
因为林纳斯用他超级明星极客的影响力推广了Git
这是Mercurial从来没有享受过的优势
除了林纳斯本人的支持之外
另外的一个原因就是GitHub社区了
GitHub非常幸运地拥有一个令人难以置信的支持者社区
那就是 Ruby社区
在短短几个月内
Ruby社区的几乎每一个人
都将自己的项目迁移到了GitHub上
当然
Ruby社区采用GitHub 也并不是偶然的
斯科特等人曾经在Ruby大会上向早期的 Ruby 社区成员展示GitHub
也在会议上发表了演讲
甚至在旧金山的 Ruby 技术聚会后
还一起畅饮啤酒
不过斯科特并不认为这是一种“推销”，
而是一种分享
因为社区内存在很高的信任度
而创始人是其中不可或缺的一部分
所以他们都会尝试使用彼此的产品
并相互提供支持
由于 Ruby社区使用了GitHub
也就意味着每次 Ruby 会议上的演讲
都会不可避免地会提到GitHub插件
这就像是一个无处不在的免费广告
随着越来越多的项目转到 GitHub
或者直接在GitHub上启动
即便是Mercurial的拥趸者
也不得不开始使用Git
久而久之
坚持使用 Mercurial 可能就变得没有什么价值了
GitHub在代码托管领域的主导地位
也在短短几年内就超越了Mercurial
虽然在Mercurial 的领域里也有BitBucket这样的平台
它是专门为Mercurial托管而构建的
可是早在2008年12月
GitHub 就已经托管了大约27000个公共代码库
相比之下，BitBucket 只有1000多个
对 Mercurial来说
想要赶上差距变得越来越困难
这个数据背后还牵扯到了当年的一件轶事
当时一个叫加斯帕（Jesper）的人给斯科特发了一封邮件
说他的一个观点不正确
因为当时斯科特非常自信地说
Git有GitHub作为支持
而Mercurial却没有
后来斯科特才知道
这个加斯帕就是BitBucket 的创始人
也是因为这个契机
二人后来成为了很好的朋友
在2006年到2007年间
人们刚开始了解分布式版本控制系统
此时Git和Mercurial 刚刚开始展开较量
2008年GitHub启动
2011年
Google Code和BitBucket 都相继引入了Git的技术支持
斯科特将这一年视为Mercurial的终结之年
四年后的2015年
Google Code彻底放弃并且关闭了代码托管服务
在他们发送的邮件中
基本上都建议“直接迁移到 GitHub”，
这也让 GitHub 如今几乎已立于不败之地
虽然这个历程看上去似乎是一帆风顺
但是说来大家可能都不太相信
直到2009年初
GitHub的四个创始人还连正经的办公地点都没有
平常都是在咖啡店里处理网站有关的事务
他们不仅规模小得出奇
而且缺乏资金支持
那么
为什么像Google Code这样有钱还有用户基础的网站
最终还是没能战胜GitHub呢？
虽然 GitHub的规模小，融资少
但是并不代表他们缺少人力
或者没有拉到足够的投资
曾经有一篇文章说到
“对于联合创始人来说
风险资本不是一个可选项”。
不过，斯科特并不这么认为
从创业之初他们就频繁的与风投公司接触
融资其实一直是摆在桌面上的选项
斯科特他们在任何时候
都可以选择这么做
但是风投公司几乎都会建议或者要求他们
租借更好的办公室
招聘更多的人手等等
在经过多年的深思熟虑之后
斯科特认为他们并不是真的需要这些
盲目的扩张
确实可以获得更好的办公室和更多的人手
但是这并不能让网站变得更好
也正因为如此，在2012年的4月
即使他们面对着一亿美金的A 轮融资时
也实实在在的给拒绝了
问题的关键从来不是钱和人手
真正牛逼的企业不需要钱也可以征服市场
反观 Google Code 等平台耗资巨大
成本上就难以对抗
GitHub之所以可以用这样少的人力成本就取得成功
最根本的原因主要是因为他们四个都是开发者
斯科特说到，我们都是开发者
我们在构建我们想要的工具
来实现我们自己理想中的工作方式
我们是这个领域里唯一一个由开发者牵头
只为开发者而构建的平台
我们没有产品经理、会计
或者试图以牺牲开发者体验为代价来提升收入的 CEO
”
事实证明，最终他们赢了
因为开源社区开始聚焦在分布式版本控制上
而他们是这个托管领域
唯一真正关心开发者工作方式的人
他们也是唯一质疑现状、从第一性原则出发、试图全面改进它的人
而不是仅仅为了提升销售而添加更多的功能
而这样的优势
反而大公司无法比拟的
甚至可以说
谷歌在这方面花的钱越多
用的人越多
越无法战胜更加纯粹的GitHub
站在当下回顾历史
为什么GitHub可以在激烈的斗争中取得胜利？
首先是抓到了时代的痛点
在当时SVN繁琐的权限管理下
实现了更方便的开源管理
然后是程序员大神极客偶像的站台支持
以及包容兴旺的社区环境
但是总的来说
这些其实都有一个相同的根本原因
那就是这是一个由开发者开发的
面向同为开发者的用户的平台
足够纯粹，没有别的歪心思
自然也就更容易明白大家的痛点
更容易得到大家的支持
好了
今天关于GitHub的分享就到这里
或许我们可以从他们的历史经验中得到一些启发
一个人或者一件事的成功
固然和历史进程有关
但是更多的时候
也要看当事人个人的努力和方向
只有做出最正确的选择
用真心换取真心
站在最接近用户的立场上
才会被用户们高高捧起
相反
那些绞尽脑汁想要从用户手中取得利益的
哪怕可以取得一时的统治地位
也会在下一次革新的浪潮来临的时候
被时代所抛下
那大家从GitHub的发展历史中得到了什么感悟呢？
欢迎在评论区留言，感谢大家的观看
我们下期再见
