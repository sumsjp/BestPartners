大家好这里是最佳拍档我是小郭
最近 Chat GPT实在是太火了
相信大家也已经有了自己的账号
之前是有问题问谷歌百度
现在是有问题先问问 ChatGPT
ChatGPT在潜移默化的改变着大家的习惯
在日常生活和工作中
都有用到它的时候
但是
相信大家肯定都有遇到过类似的问题
比如偶尔就验证一下你的浏览器
或者是出现人机验证
或者是提示请求被阻止了
这个时候就只能换一个VPN
还会突然的出现故障只能刷新页面
经过浏览器验证和人机验证之后
重新切换回会话再继续
还有的时候会输出代码
在最关键的位置中断了
然后再问
又从头开始输出
到关键的位置又中断了
还有就是响应的时候输出文字很慢
经常是以为是VPN断了
偶尔还会提示系统负载过高
免费用户就用不了了
今天给大家介绍的就是一个能帮忙
解决上面这些问题的程序
叫潘多拉Pandora
他帮大家解决了前面所有的痛点
接下来就带大家
来看看这个魔盒里都有什么吧
ChatGPT上各种问题
最关键的原因是由于VPN
的问题导致的
于是作者就在CloudFlare上做了一些工作
然后让潘多拉去访问CloudFlare上的服务
也就是 ai.fakeopen.com 这个域名
这个域名是可以在国内直接访问的
他指向的就是
CloudFlare的服务
这样的话就能绕过 VPN 的限制
访问的时候就不需要挂梯子速度很快
咱们可以看一下他的请求地址
就是这个 ai.fakeopen.com
潘多拉在安装以后有两个命令
一个就是 pandora
这个可以理解为单机版本
需要在使用的时候
先用邮箱与密码登录
或者是指定 Access Token 的文件
登录以后的会话历史和官网是一致的
它还有它有两种界面
一种是命令行的
就是直接在终端里和它对话
另外一种就是 Web 界面
像大家刚才看到的那样
和 ChatGPT 官网基本是一致的
只是 New Chat 这个按钮
挪到了这个位置
右上角这个位置
他的另外一个命令就是 pandora-cloud
在这种模式下
是不需要在启动的时候登录的
可以在访问的时候再用邮箱与密码
或者是 AccessToken 来登录
这两种模式下的 Web 界面是一样的
接下来咱们就来说一说
如何在本地部署潘多拉
他有两种方式可以选择
他文档都在DOC下的
有一个 wiki 的文件
有两种可以两种方式可以选择
一种就是用 pip 来安装
还有一种就是用 Docker 来直接运行镜像
而对于这两种方式它又分为
一是直接安装运行
以及自己编译运行
相对来说直接安装会
更容易些
如果你习惯用 docker
可以使用 docker 的方式
我这里是用 conda 创建了一个虚拟环境
如果你觉得麻烦的话可以略过这一步
直接在系统上安装就可以了
直接安装的话
就很简单了
作者已经把编译好的包上传到了 PyPI 上
直接用pip install就可以了
他一共需要运行三条命令
第一个是安装这个基础程序
就是潘多拉那个基础程序
如果你需要 3.5-turbo 这个模式的话(这个模式是收费的)
还需要再安装一个 API
然后刚才咱们提到
有另外一个 cloud 模式的话
就需要再安装一个 cloud
然后如果是
编译运行的话就是拉去他的源码
然后通过源码来安装
需要先下载他的源码
然后切换到这个源码目录
再用 pip install 来装
只是把后面的
库名改成了点
其他的都是不变
咱们看一下他的
程序运行
程序运行的话需要几个参数
如果不带参数末不带参数运行
如果不带参数运行的话
它会默认启动这个 CLI 的这个界面
然后提示你输入
邮箱和密码来登录 ChatGPT
咱们因为我的那个账号是用
谷歌的账号登录的就是第三方登录的
所以只能用 AccessToken 的方式来登录
这样的话就需要使用这个
-t token_file 这个参数来启动
再来启动看一下
他问要不要保存这个 Token
选择y就行了
可以看到这里边是这些聊天的窗口(历史记录）
咱们选择一个 new chat
然后这里可以提问
需要敲两下回车才会把
你的问题发送出去
然后可以看到他已经返回了结果
咱们退出程序
它还有一个参数是 --tokens_file
就是这种模式下是可以指定多个 Token 的
这个参数指定的文件的格式
是一个 JSON 文件
然后它的 key 就是你的 token 名字
它的 value 就是 token 文件(AccessToken的内容）
挂这个参数启动的话
它会问你需要选择哪一个 Token
选1
可以看到数据和刚才实际是一样的
然后另外一个命令叫 pandora-cloud
不带参数启动的话
他会监听你本机的8018这个端口
如果你想修改他的
监听端口的话可以使用这个参数
这会就可以通过浏览器去访问了
刷新一下页面
嗯已经出来了
Cloud 模式比较适合于
多人使用的情况
而如果只是自己用的话
直接用基础模式打开它的 Web 界面就可以了
基础模式打开 Web 界面的话是
也是-s这个参数
可以看到这是一样的
这块启动的时候他没有要用户名密码
是因为刚才咱们保存了那个
Token 文件
如果不保存的话
在启动
这个模式的时候
它会提示你要先登录进来
如果你指定了
多个 Token 就是用这个参数
真的多个 Token 的话
那么在访问的时候就
可以用
后面挂参数 ?token=
刚才的T1还是T2
就是你那个token的名字
看一下token文件
就是这个名字
来选择你当前登录使用的Token
咱们再来说说怎么获取到这个token
获取token的话有两种方式
第一种是你先在官网登录了
就是确保你已经在官网登录了
然后再访问他的 /api/auth/session
这个地址
然后他就会把这个token文件返回过来
注意不要把这些
所有的内容都复制过去
咱们只需要这个 accessToken
后面这个引号里的所有内容
大概是到这个位置
把这段复制过去就可以了
然后有的时候你访问这个地址的时候
比如你用了一个香港的VPN
访问这个地址可能会被 block 掉
sorry you have been blocked
就是他禁止你访问这个地址的话
作者还给大家提供了一个单独的服务
就是这个这个地址
你点击这里拿accesstoken
咱们来看一下怎么用这种方式来
拿到他的accesstoken
这里面会提示你说
这个服务适用于被拒的用户的
获取 accesstoken
但是前提是你得有 Chat-GPT 的账号
token的有效期
呃不知道他这里是不是写错了
我拿到的token有效期是1个月
咱们先获取登录链接
然后这会他会提示你说
接下来该怎么做
要打开一个受支持国家的梯子
然后要安装一个Chrome的插件
这个插件的话
并没有上传到
Chrome的那个store
需要手动下载
通过release下载 zip 文件
把这个下载下来以后解压
解压以后
在Chrome的
扩展程序这
这有一个开发者模式
把这个开发者模式打开
打开这个开发者模式以后
选这个加载
已解压的扩展程序
然后
选择刚才解压的那个
压缩包里的 src 目录
我就不重复选了
如果你安装成功的话它会在这出来
这个 ChatGPT Auth Helper
这个插件
有了它就说明已经安装成功了
然后咱们再回到这个页面
安装好插件以后点击这个
点这里去登录
这会输入你的邮箱和密码
或者是用第三方账号
这会提示说已经被屏蔽
不用管啊
咱们只需要把上面这个
地址栏的地址复制过来
然后到这里
粘贴然后点确认提交
他就在获取 AccessToken 了
好token已经拿过来了
把这个复制过来就可以了
可以看到这个token过期时间是 6月10号
大概是一个月的时间
Cloud 模式
用token登录以后
他会把这个token写到cookie里
以后再访问的话
就不需要重复的输入了
咱们把这个删掉
然后看一下这是什么效果
看这里它提示说你需要登录
然后有两种方式
第一种是用邮箱和密码
第二个就是用access token
刚才咱们已经拿了access token
到这里粘贴
然后确定
就登进来了
然后登进来以后
你看他会把这个token写在这个
cookie里下次再登录的话就
不需要再提示你输入 Token 了
直接登进来了
刚才大家可能已经注意到了
我在启动的时候用的是
系统服务启动的这个潘多拉
实际这个很容易啊
只需要把这些内容复制到
/etc/systemd/system/pandora.service
复制到这个文件里边
然后执行下面这3个命令
就可以了
这样的话
他就会以服务的方式来运行
然后再来说一下
darker的方式
作者已经把打包好的镜像上传到了darker hub
所以直接可以运行
镜像的名字叫 pengzhile/pandora
如果你要指定一些参数的话
它是通过环境变量来进行的
比如你要启动 cloud 模式
就需要指定一个环境变量叫 PANDORA_CLOUD=1
然后如果你要指定它的server的话
就是 PANDORA_SERVER
然后指定这个server的地址
指定 AccessToken 也是一样就是通过环境变量
然后把那大长串的 AccessToken 写进来
如果你不想再启动命令写这么长
也可以把它放到一个 env file 里边
然后通过这个 --env-file 这个参数
把这个文件指定进来就可以了
env file 里边的内容
大概就是这个样子的
然后如果你想自己编译 docker 镜像的话
也不复杂
官方提供的镜像是用环境变量来
控制参数的
我给稍微改了一下
可以像在本地启动那样指定参数了
把这些内容复制到 Dockerfile 文件里边
然后去执行这个 docker build -t pandra .
然后最后有一个点
这点不要忘了
就可以去打打包docker镜像了
然后在运行的时候
直接通过像运行本地程序那样
去指定他的参数就行了
但需要注意的话如果你映射
token 文件的话
因为他的文件是读容器内部的
这会需要做一个卷宗的映射
在 wiki 的最后
作者还提到了说如果你
这个域名在你的那个区域
被墙了的话怎么处理
这时候你就需要去 CloudFlare 上注册一个账号
然后去创建一个新的Worker
我已经注册好了
在worker里边输入这些内容
这已经输好
然后你可以点这个 Send
来测试
如果这边显示
hello Pandora就说明这个服务没问题
然后这个地址
就是你需要的地址
有了这个地址以后
再去这通过这个环境变量
指定 ChatGPT API 的前缀
它默认是 ai.fakeopen.com
然后把这个换成
咱们刚才这里的这个地址
就是这个地址
就可以了
你可以试一下
不要最后的那个斜杠啊
要不然他会重复
咱们再来访问一下看看
可以看到
这里边的地址已经
换成了刚才咱们替换的那个地址了
好了
以上就是今天要分享的所有内容了
感谢大家的观看
如果你喜欢潘多拉这个软件
别忘了去 GitHub 上去给作者点一个star
如果你喜欢我们的频道欢迎订阅
再次感谢下次见
