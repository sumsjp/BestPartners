大家好，这里是最佳拍档，我是大飞
在科技的快速发展历程中
我们常常能见证到各种突破
但是有些突破
却能从根本上改变我们对一个领域的认知
今天的突破就发生在计算机科学的数据结构领域
主角是一位本科生
他的研究成果竟然推翻了图灵奖得主姚期智40年前提出的猜想
还带来了全新的哈希表算法
甚至突破了搜索效率的极限
这究竟是怎么一回事呢？
让我们来一起深入了解一下
在计算机科学的庞大体系里
哈希表（Hash Table）是一个极为基础而且关键的数据结构
它的历史可以追溯到20世纪50年代早期
经过这么多年的发展
哈希表已经广泛应用在了各种软件和系统中
哈希表的核心思想，简单来说
就是通过一个哈希函数（Hash Function）
把任意范围的键值
映射到一个固定大小的数组空间里
打个比方
我们可以把哈希表想象成一个巨大的文件柜
每个文件都有一个独特的编号
哈希函数就像是根据这个编号
快速找到对应抽屉的工具
文件被放进抽屉后
下次需要的时候就能够快速取出来
但是哈希表在实际使用中存在一个棘手的问题
当这个“文件柜”快要被装满的时候
再想再找一个空抽屉来放新文件
就回变得越来越困难
具体来讲
当哈希表的占用空间接近饱和
比如已经用了99%的空间时
要想在剩下的空间里找到一个空位
搜索的次数会和填充率成正比
这意味着，如果哈希表99%满了
那么在最坏的情况下
可能需要尝试大约100次才能找到一个空位
这种情况就像是给哈希表的搜索效率
设置了一个难以突破的“天花板”。
1985年
图灵奖得主姚期智在他那篇具有里程碑意义的论文《均匀哈希是最优的》（Uniform Hashing is Optimal）中提出
在具有特定属性的哈希表中
随机选择抽屉的方法
也就是均匀探测（Uniform Probing）是最优选择
在之后的近40年里
计算机科学界普遍认同姚期智的这个猜想
这个共识对数据库系统的设计
以及众多依赖高效数据存储的现代应用程序
都产生了深远的影响
可以说
这个理论在计算机科学的数据存储领域
占据了非常重要的地位
然而，这个看似坚不可摧的理论堡垒
却被一位年轻的本科生撼动了
这位本科生就是罗格斯大学的安德鲁·克拉皮文（Andrew Krapivin）
2021年秋天
安德鲁在浏览学术论文的时候
发现了一篇名为《微型指针（Tiny Pointers）》的文章
这篇论文主要探讨了一种新型的数据指针技术
能够大幅减少计算机内存的使用
当时，他并没有对这篇论文深入思考
直到两年后的2023年
当安德鲁真正深入研究这篇论文的时候
才发现了其中隐藏的巨大潜力
《微型指针》这篇论文研究的问题看似简单
却意义深远
那就是如何用更少的比特位来存储计算机中的指针
在传统的计算机存储中
指针需要log n个比特
才能在n个位置中定位一个元素
但是这篇论文提出了一个巧妙的思路
如果预先知道指针属于哪个用户
就可以利用这个额外信息
来压缩指针的大小
正是这个压缩指针的思路
给了安德鲁对哈希表研究新的启发
在传统的哈希表的搜索过程中
通常会假设每次探测都是独立的、均匀随机的
但是安德鲁没有被这种传统方式束缚
他后来自己也表示
当时可能就是因为真的“无知”，
所以才没有被固有的观念限制
想到了新的方向
安德鲁基于《微型指针》的思路进行探索
最终构建出了一种新型的哈希表
这种哈希表不再依赖均匀探测
在最坏情况下
查询和插入所需的时间与(log x)²成正比
这个效率比传统方式快得多
这个成果直接反驳了姚期智的猜想
当安德鲁把自己的设计展示给前教授、《微型指针》的共同作者马丁·法拉赫-科尔顿（Martín Farach-Colton）的时候
教授自己一开始都持有怀疑的态度
这也不难理解
哈希表作为计算机科学中
已经被研究得非常透彻的数据结构之一
想要有重大突破，确实难以想象
但是当论文的另一位合作者、卡内基梅隆大学的威廉·库兹莫尔（William Kuszmaul）
仔细研究了这项工作之后
他意识到了其中的革命性意义
威廉对安德鲁说：“你并不是仅仅发明了一个新的哈希表
你实际上完全推翻了一个存在了40年的猜想！
”最终，他们三人共同合作
完成了相关论文
这篇论文一经发表
就引起了学界的广泛关注
康奈尔理工学院的亚历克斯·康威（Alex Conway）评价道：“这是一项开创性的工作
尽管哈希表已经有着悠久的历史
但是关于它们的工作原理
我们仍然有很多需要了解的地方
这篇论文以令人惊讶的方式
回答了其中的几个根本性问题
”那么，这项工作到底有哪些开创性呢？
接下来，我们来详细了解一下
安德鲁提出的两种新的哈希表算法
先来说说弹性哈希（Elastic Hashing）
要理解它的开创性
我们得先清楚传统哈希表面临的根本性挑战
在传统的开放寻址哈希表中
当需要插入一个新元素的时候
会按照某个预定义的探测序列
逐个检查位置，直到找到第一个空位
这种方法被称为“贪婪策略”。
姚期智在1985年的论文中证明
在这种贪婪策略下
当哈希表接近满载时
比如只剩下δ比例的空位
最坏情况下需要O(δ⁻¹)次探测
才能找到一个空位
并且他猜想这个界限对于任何贪婪策略都是最优的
但是安德鲁的弹性哈希证明
如果放弃贪婪策略
能获得显著更好的性能
弹性哈希提出了一种全新的哈希表构造方法
它的核心思想是把整个哈希表划分为多个子数组
然后通过一种二元探测结构进行索引
具体来说
哈希表被拆分成一系列大小指数递减的子数组
比如A₁、A₂直到A_⌈log n⌉
其中|Aᵢ₊₁| = |Aᵢ|/2 ± 1
这种层次结构为非贪婪探测提供了可能
使得插入操作可以优先在负载较低的区域进行
同时还能保证查找过程的高效性
安德鲁还引入了一个特定的映射φ(i
j)，
使得二维探测序列可以映射到一维探测序列
这个映射设计得很巧妙
它确保了在插入过程中
较早被访问的探测位置能够更高效地找到空槽
从而降低整体探测复杂度
弹性哈希采用了分批次插入的策略
来保证各个子数组的负载水平被合理分配
比方说，在初始批次B₀中
哈希表的第一个子数组A₁
被填充到大约75%的负载
那么在后续的批次Bᵢ中
插入操作会主要在Aᵢ和Aᵢ₊₁之间进行
这样能够保证每个子数组的负载都在合理范围内
在插入过程中
如果某个子数组还有较多的可用槽位
也就是空位比例高于δ/2
新元素就会尝试在这个子数组内
找到合适的位置
而当子数组接近满载的时候
插入算法会自动转向下一级子数组
以此来提高存储效率
在最坏的情况下
也就是所有子数组的空位都非常有限的时候
算法会退回到均匀探测策略
但是这种情况发生的概率极低
所以整体复杂度还是得到了优化
从数学分析的角度来看
弹性哈希在降低探测复杂度方面的效果显著
在均摊探测复杂度方面
安德鲁证明了弹性哈希的平均探测次数为O(1)。
这意味着大多数操作
只需要常数次探测就能完成
比均匀探测的O(log δ⁻¹) 要好得多
原因就在于
弹性哈希把大多数插入操作
限制在了负载较低的子数组中
使得多数元素能够在少量探测后成功存储
对于最坏的探测复杂度
研究表明在无重排的情况下
任何开放寻址哈希的最坏情况探测复杂度
必须至少达到Ω(log δ⁻¹)，
而弹性哈希恰好实现了这个下界的最优匹配
在弹性哈希的基础上
安德鲁还进一步提出了一种新的贪婪开放寻址策略
叫做漏斗哈希（Funnel Hashing）
漏斗哈希通过构造一种层级结构的哈希表
实现了最坏情况的期望探测复杂度O(log²δ⁻¹) ，
并且证明了这个界限的最优性
漏斗哈希的基本思想是在哈希表中引入多级结构
让元素在不同负载水平的区域之间分层存储
从而降低高负载情况下的探测次数
具体来讲，哈希表被划分为多个层级
每一层内部又进一步分为若干个大小的子数组
所有子数组的大小按几何级数递减
假设哈希表的总容量为n
研究者首先把它划分为两部分
其中一部分的大小约为δn
用来存储最难插入的元素
而剩余部分再细分为α个子数组
这些子数组的大小递减关系满足|Aᵢ₊₁| ≈ 3|Aᵢ|/4
并且每个Aᵢ进一步会划分为若干个小块
每个小块的大小设定为β
取O(logδ⁻¹)。
在插入过程中
每个元素首先会尝试插入最上层的子数组
如果失败就依次尝试下一个数组
直到成功找到空位
或者最终进入专门的存储区
在每一层的插入尝试中
元素会随机选择一个子块
并且依次扫描该子块中的位置寻找空槽
这种分层探测策略
保证了大多数插入操作可以在前几层完成
只有极少数插入会进入最底层的存储区域
从数学分析来看
漏斗哈希的最坏情况期望探测复杂度为O(log²δ⁻¹) ，
明显优于均匀探测的O(δ⁻¹) 。
研究人员证明了每个子数组在一定插入次数后
都会达到接近饱和的状态
这意味着即使在较高负载的情况下
大多数插入操作也能在O(logδ⁻¹) 次探测内成功
通过分析插入元素在不同层级上的分布
研究人员还证明了即使在最坏情况下
元素也只需经历O(log²δ⁻¹) 次探测
就能找到一个可用的位置
并且还证明了这一界限的最优性
也就是说
任何贪婪开放寻址哈希表都无法突破Ω(log²δ⁻¹) 的最坏情况探测复杂度
漏斗哈希还有一个优点
就是具备良好的高概率最坏情况保证
研究人员进一步证明
在绝大多数情况下
任意一个元素的最坏情况探测复杂度不会超过O(log²δ⁻¹ + log log n)。
这意味着即使在极端负载的情况下
这个方法仍然能够保持较为稳定的性能
不会出现大幅度退化的情况
总的来说
安德鲁·克拉皮文的研究成果
不仅推翻了姚期智40年前的猜想
还提出了弹性哈希和漏斗哈希这两种全新的哈希表算法
在哈希表的搜索效率上实现了重大突破
这个成果在理论层面意义重大
解答了姚期智1985年提出的未解决问题
也就是最坏情况的期望探测复杂度
是否可以低于O(δ⁻¹) ，
同时也证明了均匀探测在贪婪算法框架下
并非最优
对于贪婪哈希表
最坏情况下的探测复杂度可以降低到O(log²δ⁻¹) ，
而对于非贪婪哈希表
平均查询时间甚至可以完全独立于负载因子δ
正如马丁·法拉赫-科尔顿所说
这只是一个常数
与哈希表是否满无关
而这一发现
连论文作者自己都感到意外
虽然目前这项研究可能还不会立即在工业界得到广泛应用
但是它的基础理论研究价值不可忽视
亚历克斯·康威表示
理解数据结构的基础理论非常重要
因为你永远不知道这样的结果什么时候会解锁某种新的突破
让实际应用变得更加高效
科技的发展往往是这样
基础研究的成果看似遥远
但是可能在未来的某个时刻
成为推动整个行业进步的关键力量
本科生安德鲁·克拉皮文也再次证明
在科技领域
创新和突破不会受限于身份和经验
只要有勇于探索的精神
和独特的思考方式
任何人都有可能做出重大的贡献
好了，今天的内容就到这里
期待未来能看到更多这样令人惊喜的科技突破
感谢大家的观看，我们下期再见
