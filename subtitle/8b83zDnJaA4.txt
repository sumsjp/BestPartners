大家好，这里是最佳拍档，我是大飞
最近，播客节目《No priors》，
采访了Cognition的联合创始人兼CEO Scott Wu
Cognition是一个专注于推理的AI公司
最近
他们发布了一个名为Devin的AI软件工程师
获得了极大的关注
在演示视频中
Devin能够独立处理端到端的整个任务
并且在针对GitHub问题的软件工程基准SweBench上
取得了领先的成绩
在这次访谈中
Scott回顾了自己的成长经历
为何要创建Cognition
以及他对Devin和Agent未来发展的看法
今天就来跟大家分享一下
现在我们都已经知道
Cognition对外宣称有10个IOI
也就是国际信息学奥林匹克竞赛的金牌得主(更正：
10块金牌)，
包括Scott自己就拿了3块金牌
所以Scott先聊了聊他小时候的事情
他从小就非常喜欢数学
而接触到编程是因为他的哥哥Neil Wu
现在也在Cognition
Scott大约在九岁的时候学会了编程
从此就爱上了它
因为这种能够将想法变为现实的能力
令他感到激动
他在学校期间就参加了许多数学和编程比赛
到高中毕业的时候
就已经决定要进入科技行业了
然后他简单介绍了一下IOI
也就是国际信息学奥林匹克竞赛
这个竞赛基本上就是编程的奥运会
它的运作方式也与其他奥运会很相似
每个国家会派出由最优秀的编程选手组成的队伍
整个竞赛的核心是解决算法问题
比如说在一些任务中找出最优算法
然后将这些算法实现为代码
虽然有一些标准的算法可以参考
但是比赛中的每一个问题都是独一无二的
都是一个以前从未出现过的新问题
而竞赛本身的美就在于你如何创造性地解决问题
所以，虽然基础知识非常有用
但是更重要的是弄清楚如何使用这些知识
以及将问题简化为基础算法
在他的成长过程中
几乎把所有的时间都花在了编程和数学竞赛上
他会把生活中遇到的每一个问题
都想象为一个算法问题
甚至连洗澡的时候都在想
他觉得编程就是投入大量的努力
并且愿意进行非常分析性的思考
然后专注在做得不好的事情上
持续的推动并且改进它
Scott认为编程竞赛与创业之间有很多的共同点
很多伟大的数学或编程问题
都来源于否定一个本以为理所当然的假设
而很多真正困难和有趣的问题
都来源于找到一个最初违反直觉的创造性想法
创业也是如此
很大程度上来源于找到一个世界还不相信的真理
然后学习如何独立思考、如何从最基本的原则出发来看待问题
以及如何真正推动自己成长并且持续改进
Cognition就是在这种想法下
于2023年11月开始成立的
公司很多初始员工
都来自于数学和编程竞赛社区的朋友
他们很多人在参加完竞赛后
都在从事与AI有关的工作
比如Scott曾经创建过一个名为Lunch Club的机器学习公司
然后经营了大约五年
联合创始人Walden曾经参与过AI代码编辑器Cursor的开发
而另一个联合创始人Steven是Scale AI最早的工程师之一
应该说
Cognition的整个创始团队都是类似的背景
他们从小就热爱数学、编程和解决问题
而且在不同的AI公司有过五到十年的工作经验
代码在他们心中有一个非常特别的位置
他们也相信可以用代码做很多事情
在Scott的眼中，过去20到30年
世界上大部分的进步都来自于软件
而且实际上每个人、每个地方都需要更多的软件工程
每家公司都在招聘更多的软件工程师
每个人都有更多的想法要实现
所以团队成员都觉得
有很多事情可以通过加速代码的步伐来完成
而他们开发出来的Devin
可以说是一名AI软件工程师
Devin能够像人类软件工程师一样
完全自主地做出所有决策
包括编写和编辑代码
此外
它还能使用命令行和浏览器、阅读文档
部署、测试或者调试所有这些代码
这些任务Devin都能自主的完成
只需要给Devin一个简单的提示
说明你想要构建什么
Devin就会全程自主地去做
你也可以和它进行互动
看看Devin正在看什么或者正在做什么
并且提供一些反馈
这就像是和另一名工程师一起工作
看到他们在做什么
并且指导他们或者提供反馈一样
当Devin推出以后
获得的浏览量超出了他们的预期
不过也有各种评论
有的人说这不可能行得通
有的人认为大家都要失业了
不过Scott认为
未来工程师的工作不仅不会消失
反而会有更多而不是更少的工程师
有两个原因
首先，对工程师的需求其实很大
甚至很多是我们通常不会想到的需求
这些需求都可以用代码来解决
如果AI能够成倍的提高每个开发者的能力
那么将来会需要更多而不是更少的开发者
第二，Devin并不能决定要做什么
而决定要做什么
解决什么问题永远是最核心的
普通软件工程师可能会花20%的时间
去思考如何解决问题
然后花80%的时间去编写代码
这意味着如果能够节省他们写代码的时间
他们将能够完成5倍的工作
并且将所有的时间用来解决创造性的问题
这就像是有了计算器之后
人们就可以去做其他的事情一样
AI实际上实现了软件的民主化
不仅让我们能够开发以前因为各种原因
而无法实现的潜在需求
同时也让每个人都能做更多的事情
这是真正令人兴奋的地方
在Devin中一共设计了四个tab
分别是Shell
Browser, Editor和Planner
这个设计的灵感
正是来源于团队日常的软件工作
实际上他们也是在以某种方式
为自己在建造agent
想要把Devin用好
就必须弄清楚自己想要什么
Scott是这样比喻的
如果你希望给一个Agent一个任务
让它自己做完了再回来给你
那么它必须一次就做得完美
而如果你有一个人类的实习生或者初级工程师
你肯定会去经常检查他的工作
并且给予一个简短的反馈
看看发生了什么
这样不仅可以帮助他们学习成长
也意味着他们能为你做更多有价值的工作
而且显然会比什么都要自己动手快得多
因此
团队首先是从什么样的工作是有意义的
以及他们希望如何与会编程的AI队友互动的角度
来倒推需求
再思考如何从技术上来实现
谈到与人类软件工程师相比
Devin的优点和缺点
Scott认为AI拥有的庞大知识显然非常有用
Devin很擅长做与DevOps和开发设置有关的事情
而DevOps其实对人类来说有点难
有一次他们在启动一个Kubernetes上的数据库的问题上
卡了一个小时左右
然后让Devin帮忙设置并且解释一下原因
Devin很快就做到了
这是一次激动人心的时刻
对于AI来说
DevOps其实是一个很好的场景
因为编辑和处理配置文件、实时运行命令、查看出现的错误
所有这些都非常适合于agent的工作流程
而另一个很好的场景则是数据分析
比如从互联网上找到正确的数据集
或者从CSV文件中提取数据集
然后清理数据，运行所需的分析
最后再构建这个分析的可视化
这些从头到尾都可以用一个agent来完成
当然，决定要做什么的并不是Devin
而是由人来精确的表达
想要搭建的东西或者是想要完成的事情
然后由Devin来负责执行这些事情
所以不能只是对Devin说，嘿
帮我建立一个伟大的企业
这是做不到的
Devin的核心在于如何接受精确的想法
并且真正将它们转换成代码
然后测试、调试整个过程、安装软件包以及部署等等
关于Devin的工作原理
Scott并没有作过于详细的解释
只是尝试用一个例子来说明
假设我们要去修复一个GitHub项目上的错误
一种方法是是你可以检查整个代码库
从错误中准确地找出需要完成的diff
然后用干净利落的写出那个diff
无论是人类还是AI
理论上都能做到这一点
因为这个过程能够准确地知道发生了什么
并且准确地理解需要修复什么
但是Scott认为
实际上对于今天的人类和AI来说
更直接的方法应该是运行这段代码
然后重现代码中的bug
添加调试语句和打印语句
然后重新运行代码
或者查看日志
询问Stack Overflow如何解决
等等等等
所以Scott更多的是要弄清楚
如何让Devin以后者的方式去思考
并且做出决策
对于Coding Agent的未来发展
Scott认为从长远来看
在五到十年的时间范围内
软件会发生很大的变化，比如说
Devin的下一步计划
是要构建下一代的人机接口
可能10年后的人们回头看现在
会觉得现在的做法简直不可思议
我们必须学习所有这些晦涩的编程语言
然后处理所有这些Stack trace
才能和计算机沟通
归根到底
今天的软件工程是一门关于如何与计算机合作
并且让计算机做你想做的事情的学科
Scott希望让软件工程师们能够将所有时间
都花在搞清楚如何解决问题上
比方说解决方案的形式应该是什么样的
什么是边缘情况
具体的细节是怎么样的
如何去构建解决每个具体问题的架构等等
而精准的代码实现
应该是Devin以后要解决的事情
真正令Scott激动的是
如何给工程师带来更多的能力
并且同时让更多人能够与软件一起工作
要知道
世界上有3000万的软件工程师
而这只是世界总人口的0.4%。
那么擅长使用AI的软件工程师
能够成倍得提高自己的能力
从而去做更多的事情
Scott相信这个变化会很快到来
因为很多趋势都在向着好的方向发展
比方说硬件会越来越好
基础模型会越来越好
推理速度会越来越快
工具使用也会越来越熟练
所有这些因素
都会推动agent越来越好的发展
不过，虽然五年或者十年以后
也许大家都在用英语跟AI一起工作
但是对于一个人类软件工程师
或者一个人类科技从业者来说
了解软件工程的基本知识、计算机的内部工作原理、算法和逻辑推理这些知识
仍然会非常有价值
五年或十年后的软件工程师
可能会有点像今天的架构师和产品经理的混合体
他需要面对的是业务上的问题
然后进行思考并找到解决方案应该是什么
Scott觉得
很快我们就会看到AI对经济和人们的工作生活
产生切实的影响
但是我们在整个AI革命中
还处于非常早期的阶段
要记得ChatGPT也就是在一年半前刚刚发布的
所以
无论是在研究方面还是在产品方面
都还有很多事情要去做
还有很多东西要去构建
也许未来某个时刻
我们只需要将所有这些知识上传到大脑中
就会成为一个完美的理性决策者
但是对于今天的我们来说
逻辑能力依然十分重要
最后
Scott安利了一波Cognition的团队成员
并且借机做了个招聘广告
这里我们就不多叙述了
好了以上就是Scott Wu这次播客的主要内容了
不知道对大家是否有所启发
感谢大家观看本期视频
我们下期再见
