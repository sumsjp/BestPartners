大家好，这里是最佳拍档，我是大飞
7月11日
YC发布了著名人工智能科学家、AI Fund的创始人吴恩达
在6月份 AI Startup School 的演讲
在演讲中，吴恩达断言
AI最大的机会必然存在于应用层
而非备受追捧的基础模型层
此外
他还剖析了当前AI浪潮下的创业核心要素
探讨了Agentic AI的崛起是当下最重要的技术趋势
反驳了“AI将使编程过时”的论调
并且提出
现在是时候让每个岗位的人都去学习编程了
在最后的问答环节
他更是尖锐地指出许多关于AI的炒作
比如“AI末日论”、“AGI威胁论”、“AI核能论”等等论调
并且分享了他关于“AI Agent累积效应”的见解等等
今天我们就来回顾一下他这次演讲的主要内容
首先
吴恩达分享了它创办初创公司时学到的一个经验
那就是速度
在他看来
对于所有渴望投身创业浪潮的人来说
执行速度不仅是一种优秀的品质
更是预测一家初创公司能否成功的关键性指标
他认为，日新月异的人工智能技术
恰恰是赋予初创公司这种“速度优势”的最强催化剂
因此
他希望通过分享一系列不断迭代的最佳实践
来帮助创业者们掌握这种至关重要的速度优势
从而显著提高它们的成功概率
在深入探讨如何“加速”之前
吴恩达首先为所有创业者
描述了他所理解的AI 技术栈
最底层是半导体公司
上免是云服务或者超大规模计算平台
再往上是众多的 AI 基础模型公司
他表示
尽管公众的目光和市场的热议
大多聚焦于这些技术层面
但是最大的机会必然存在于应用层
因为我们需要应用层来创造足够多的收入
这样才有能力去支付基础模型、云和半导体这些技术层的开销
所以对于有志于AI创业的人来说
建议可以将目光更多的聚焦在应用层
在过去一年里
AI 技术的趋势也发生了巨大变化
其中最重要的就是Agentic AI 的兴起
吴恩达坦言，大约一年半前
他开始四处演讲
试图让人们相信 AI Agent 将成为一个重要的方向
但是这个词后来被一些市场营销人员所利用
导致几乎失去了它本来的意义
因此，他希望从纯粹的技术视角
来重新阐释为什么会认为Agentic AI至关重要
以及它为什么能开辟出大量新的创业机会
吴恩达首先指出了当前我们使用大语言模型的普遍局限性
大多数人使用大语言模型的方式
就是给它一个提示
然后让它生成输出
这种方式就好比让一个人从头到尾、一气呵成地写一篇文章
期间完全不能使用退格键
显然人类是无法适应这种线性的写作方式的
而且事实证明，AI 也是如此
而Agentic Workflow则彻底打破了这个限制
它允许AI系统以一种更复杂、更迭代、更接近人类专家思考的方式
去完成任务
比如说，通过Agentic Workflow
我们可以让一个 AI 先写出文章大纲
然后根据需要进行网络搜索
获取相关网页作为参考
接着撰写初稿
之后再阅读、审视并且修改初稿
如此往复
这样就形成了一个迭代的工作流
模型可以进行思考和研究
然后进行修改
再返回去进行更深入的思考
通过多次重复这个循环
虽然速度更慢
但是最终产出的成果质量要高得多
吴恩达强调
这种工作流在AI Fund的实践中
被反复验证是成功的关键因素
他表示
无论是填写复杂的合规文件、进行医疗诊断
还是对复杂的法律文件进行推理
都发现这种工作流是决定一个方案可行与否的关键
他坚信
未来仍然会有大量的工作要做
许多有价值的商业模式也有待建立
而这些机会就在于如何将现有的、或者全新的工作流程
转化为这种代理型的模式
基于这个趋势，吴恩达指出
过去一年里
已经出现了新的代理型编排层
它能够帮助应用开发者更好地编排或者协调对底层技术的大量调用
这个编排层的出现
会让构建应用程序变得前所未有地容易
这也印证了他的观点
那就是AI应用层必然是整个技术栈中最具有价值的一层
既然重点在应用层
那么我们又该如何获得速度？
吴恩达分享了AI Fund的核心秘诀之一
那就是专注于具体的想法
他为“具体”这个词
下了一个非常具有操作性的定义
即一个具体的想法或产品构思
必须具体到工程师可以直接上手开发的程度
比如
“让我们用 AI 优化医疗保健资产”这句话
在他看来是无法执行的
因为这其实不是一个具体的想法
太模糊了
如果让 AI 编写软件来优化医疗保健资产
不同的工程师会做出完全不同的东西
因为它不具体，所以就无法快速构建
也就没有速度
相比之下
一个具体的想法应该能够立即转化为某种行动
他举例道，如果你有一个具体的想法
比如，让我们写一个软件
让医院的病人可以在线预订核磁共振的时段
从而优化设备的使用率
这个想法就是具体的
意味着工程师可以快速把它做出来
不管这是不是个好主意
都能够换来速度
他接着指出了许多创业者都很容易陷入的一个认知陷阱
那就是模糊的想法
会更容易获得他人的认同和称赞
也就是说
当我们对某件事描述得模糊时
几乎总是‘对’的
但是当具体的时候，它可能是对的
也可能是错的
但是无论对错
我们都可以更快地得到验证
而这对于初创公司至关重要
那么
我们又该如何获得这些高质量的具体想法？
吴恩达认为
这通常需要对一个特定问题进行过长期的、深入的思考
他以自己创办Coursera的经历为例
在创办 Coursera 之前
他花了好几年的时间思考在线教育
与用户交流
不断打磨自己对于一个优秀的教育科技平台
应该是什么样的直觉
这个漫长的思考过程所带来的直觉
对于快速决策会非常有帮助
他指出，对于早期的初创公司
专家的直觉在决策速度上
往往优于数据分析
他解释道
在你长期思考、与客户交流之后
如果你问这位专家
我应该做这个功能还是那个功能？
他会凭借直觉给出的瞬间判断
这实际上是一个非常有效的决策依据
很多从事 AI 研究的人
可能会说自己需要数据
但是事实证明，对很多初创公司而言
获取数据来做决策是一个缓慢的机制
而一个拥有敏锐直觉的领域专家
往往是实现快速决策的更优机制
基于这点
他给出了一个关于团队执行的建议
那就是在任何一个时间点
都应该只追求一个非常清晰的假设
集中所有资源去全力验证或者证伪它
他强调
一家初创公司没有资源去分散下注
比如同时尝试 10 件事
而是应该选择一个，然后全力以赴
紧接着
吴恩达接着探讨了构建与反馈的循环
并且指出AI编程助理正在深刻地改变着软件的构建方式
他强调，对于应用型的公司而言
最大的风险并非技术实现不了
而是造出来的东西根本没人关心
他将软件工作分为了两类
一类是用来验证想法的“简易快速的原型”，
一类则是“生产级的软件”。
他观察到，AI助手对后者的效率提升
大约只有30-50%，
但是对前者的提速则是惊人的
至少快了 10 倍
甚至可能远超 10 倍
因此
吴恩达经常会给团队发出一个听起来可能有些“出格”的指令
那就是鼓励大家去写不安全的代码
因为如果这个软件只在自己的笔记本电脑上运行
那么代码不安全是没有太大问题的
但是在发布前
一定要保证代码的安全和可扩展
但是如果只是为了自测，那就没关系
这种理念
使得AI Fund的团队能够进行系统性地创新
比如，一次性构建 20 个原型
看看哪个能成功
”他认为
只要能将概念验证的成本降得足够的低
那么即使大量原型最终没能投入生产
也是完全可以接受的
对于那句著名的“快速行动
打破常规”的口号
吴恩达提出了自己的修正版
他认为正确的做法是 “快速行动
同时也要负责任”。
吴恩达还观察到一个令人惊讶的变化
那就是过去我们习惯将代码看作是非常宝贵的资产
因为编写代码的成本很高
但是随着软件工程成本的下降
代码的价值已经远不如从前
比如他的某个团队
在上个月内就将代码库完全重构了三次
因为像彻底重构代码这些工作的难度和成本
都已经大幅降低
他还引用了杰夫·贝佐斯的“双向门”与“单向门”的理论
指出过去作为“单向门”的技术架构选择
如今正变得越来越像可以轻松反悔的“双向门”。
他确实观察到
自己的团队会更频繁地变化
比如基于某个技术栈开发一周后
突然又改变主意
然后干脆丢弃整个代码库
在新的技术栈上从零开始
基于软件工程门槛的急剧降低
吴恩达提出了一个观点
他坚决反驳了，因为AI会自动编程
所以人们不应该再学编程的论调
在他看来
这或许会成为有史以来最糟糕的职业建议之一
他的逻辑根植于技术发展的历史
工具的进步总是让更多人掌握一项技能
而非更少
他回顾道，几十年前
当世界从打孔卡转向键盘和终端的时候
编程变得更容易了
当我们从汇编语言转向 COBOL 等高级语言时
当时甚至有人发表论文
论证说既然有了 COBOL
我们就不再需要程序员了
显然
每一次工具的革新都降低了门槛
因此，随着编程变得越来越容易
就应该有更多人去学习它
于是
他抛出了一个可能略带争议的呼吁
那就是现在是时候让每个岗位的人都去学习编程了
这并非是一个空想
他已经在自己的团队中付诸于实践
他分享道
我的首席财务官、人才主管、招聘专员
甚至前台，他们都会编程
并且我亲眼看到
编程能力让他们在各自的岗位上都表现得更出色
为了说明为何要让所有人都学会与机器沟通
他分享了一个关于生成图像的亲身经历
在为Coursera课程制作背景图的时候
一位懂艺术史的团队成员Tommy
运用专业知识编写出了精准的Midjourney提示词
从而生成了质量极高的图片
相比之下
吴恩达自己因为缺乏艺术史知识
只能想出宽泛的提示词
这个例子让他深刻体会到
未来最重要的技能之一
就是能够清晰准确地告诉计算机你想要什么
并且让它为你执行
学习编程
并非指要你亲自编写每一行代码
而是学会如何引导AI 为你来编程
这才是掌握这种指挥能力的最佳途径
然而
工程速度的飞跃也带来了始料未及的连锁反应
吴恩达观察到，产品管理工作
包括获取用户反馈、决策要开发的功能等等
正在日益成为整个流程的瓶颈
他分享道，在过去一年中
越来越多的团队开始抱怨
瓶颈出在产品端
因为工程师的开发速度已经变得太快了
就在昨天
他的一个团队在做项目人力规划时
首次向他提出了一个建议
那就是将产品经理与工程师的比例设定为1:
0.5
也就是为每一位工程师配备两名产品经理
这是他在职业生涯中第一次看到有管理者提出这样的建议
虽然还不能确定这是否是个好主意
但是这无疑是一个信号
揭示了未来可能的发展方向
为了应对这个挑战
吴恩达强调了建立快速反馈机制的重要性
并且分享了他个人常用的一系列策略
分别是依靠自己的产品直觉、找三五个朋友同时试用
以及找三到十个陌生人获取反馈
他特别强调了最后一项技能的重要性
认为是“最重要的产品技能之一”。
而对于广受推崇的A/B测试
吴恩达给出了一个更深层次的理解
他认为
A/B测试的目的远不止是在方案A和B之间做出选择
更重要的是
通过分析数据来打磨和校准自身的直觉
比如反思，为什么原以为A方案会更好
但是数据却显示B方案胜出了呢？
通过这种方式
我们可以利用数据来不断更新自己的心智模型
从而提升凭直觉做出高质量决策的能力和速度
在获得速度优势方面
吴恩达认为
深刻理解AI本身也是一个关键的因素
他表示，对于手机应用这类成熟技术
大多数人已经使用了很长时间
所以大家对于一个手机应用能做什么、不能做什么
都有着相当不错的直觉
同样
对于销售、市场、人力、法务等成熟的职能岗位
相关知识已经相对普及
很容易找到优秀的市场或人力专家
但是AI 是一项新兴技术
关于如何高效利用 AI 的知识远没有普及
因此，那些真正“懂”AI 的团队
相较于其他团队
就拥有了显著的优势
比如
一个客服聊天机器人能达到的准确率上限是多少？
你应该采用提示词工程、模型微调
还是AI Agent 工作流呢？
如何实现低延迟的语音输出呢？
在面对大量这类的决策时
一个正确的选择可能让你在几天内就解决问题
但是一旦选错了方向
速度可能就不是慢了两倍
而是慢了十倍
因此
正确的技术判断力对初创公司至关重要
另一个原因是，在过去两年里
涌现出了海量优秀的生成式 AI 工具和“构建模块”，
比如提示词工程、AI Agent 工作流、评估、护栏、RAG、语音优先、异步编程、微调、图数据库等等
它们就类似于乐高积木一样
现在相当于我们拥有了一个丰富而强大的构建模块库
通过快速组合它们
就能创造出在一年前地球上任何人都无法构建的软件
这为初创企业开辟了前所未有的创新机遇
在演讲结束后的问答环节
吴恩达就多个热点问题与现场观众进行了深度交流
当有人问到，随着AI进步
是开发工具更重要
还是学习使用工具更重要呢？
个人如何在这个智能日益普及的世界里
又该如何保持核心价值呢？
吴恩达首先表示
他认为AGI的概念被过度炒作了
他指出，在未来很长一段时间里
仍然会有大量工作是人类能做而AI做不了的
在他看来，未来最强大的人
是那些能够驱使计算机精准执行自己意图的人
因此，他强调
掌握并善用工具至关重要
他不担心人们会无事可做
但是他确信
善用AI的人将比不使用AI的人强大得多
当被问到算力的未来发展方向
以及如何辨别行业炒作时
吴恩达分享了一个他用来辨别行业炒作的思维框架
他指出，在过去两年里
有些公司为了特定目的
刻意夸大了某些事情
于是他建立了一个个人的判断标准
那就是警惕那些让某些企业显得比实际上更强大的炒作叙事
关于“AI末日论”，
他直接斥责是无稽之谈
认为这本质上是服务于企业融资和公关的炒作
关于“AI导致失业”的论调
他断言这根本不是事实
同样是让企业显得更强大的谣言
关于“大模型会扼杀初创公司”的说法
他认为这也不是真的
虽然少数公司被淘汰了
但是想要轻而易举地消灭成千上万的初创公司
远没有那么简单
他还提到
媒体有时热衷于炒作极端个案
并且以耸人听闻的方式来报道
这导致炒作叙事被不断的放大
所有这些被放大的炒作叙事
都是对未来真实图景的一种歪曲
他明确表示
当前AGI的概念被过度炒作了
未来很长一段时间
人类的价值依然不可替代
当被问到
如何看待未来可能出现的“AI Agent的累积效应”时
吴恩达就此分享了几点技术看法
他给开发者的首要建议是
在初期基本不要担心Token成本
因为只有极少数公司
能够幸运地达到
因为用户量巨大而导致成本成为问题的阶段
即便如此
通常也能找到对应的工程解决方案
来控制成本
他指出
大量的AI Agent工作流实际上已经整合了提示工程、RAG、评估体系等许多不同的步骤
这本身就体现了能力的累积
但是他建议要更加着力于设计软件架构
让在不同基础模块的提供商之间切换变得相对容易
最后，在如何向普罗大众普及AI知识
让更多人理解AI的原理和能力这件事上
吴恩达肯定地表示
他认为知识终将普及
这也是DeepLearning
AI正在努力的方向
但是他也谈到了两个主要风险
第一个风险是“我们没能足够快地让所有人跟上步伐”。
第二个风险
是出现扼杀创新的“守门人”。
他指出
一些公司正利用被夸大的“AI风险”来游说监管机构
试图打压开源社区
目的是成为基础模型的“守门人”，
比如加州的1047号提案
他警告说，一旦这些监管提案成功
并且最终形成扼杀创新的法规
那么最终只会剩下少数几个“守门人”。
到那个时候
任何人都需要得到这少数几家公司的许可
才能去微调一个模型
或者以特定方式的使用它
他认为这将扼杀创新，阻碍信息传播
因此，他最后呼吁
只要我们能阻止这种对开源和开放权重模型的攻击
那么知识最终就能得以普及
我们也才有希望让每个人都跟上
但是，这场保护开源的战斗
远未结束
我们必须继续努力，保护开源
好了
以上就是文达这次演讲的主要内容了
希望对大家能有所帮助
感谢观看本期视频
我们下期再见
