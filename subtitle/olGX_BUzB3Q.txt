大家好，这里是最佳拍档，我是大飞
最近由于身体原因，需要做个小手术
医院要求穿病号服
所以最近几期可能就不露脸了
希望大家多包涵
距离闹得沸沸扬扬的微软“蓝屏”事件
已经过去了半个多月了
当地时间8月7日
这起事件的罪魁祸首CrowdStrike
发布了长达12页的根本原因分析
简称RCA
介绍了这起事件的调查结果、缓解措施和技术细节
不过
虽然看起来好像CrowdStrike很有诚意
但是网友们并不买账
引发了更大范围的群嘲
可以说这是一个史上最荒谬的Bug了
那么CrowdStrike到底做了些什么呢？
今天我们就再来聊聊这件事
首先我们来看下CrowdStrike自己是怎么说的
这次Bug产生的软件是CrowdStrike Falcon
它主要是提供传感器AI与机器学习模型
用来识别并且修复最新的网络威胁
从而保护客户的系统
为了让这些模型始终保持最新的状态
所以传感器会将本地存储中的上下文
与实时的系统活动进行关联
汇总为一个行为与攻击指标，简称IOA
在这个过程中
还有一套传感器检测引擎
会负责将传感器的内容发送到云端
并且接收来自云端的快速响应
主要是用来收集遥测数据、识别对手行为的指标
以及增强传感器上的新型检测与预防功能
这样做的好处是无需更改传感器的代码
主要采用的是行为启发式方法
这个跟传感器AI的预测和检测功能是不同的
关键在于，这个云端的快速响应
是通过通道文件形式传送的
并且由传感器的内容解释器
使用一个基于正则表达式的引擎来进行解析
其中每个通道文件
都与传感器当前版本中内置的一个特定模板类型相关联
在2024年2月
CrowdStrike发布了7.11版本
同时引入了一种新的模板类型
用来查看并且检测滥用命名管线、以及其他Windows进程间通信
简称IPC机制的新型攻击技术
IPC模板的实例会通过编号为291的通道文件
把云端快速响应的内容传送到传感器
新的IPC模板类型定义了21个输入参数字段
但是用通道文件291的模板实例
来调用内容解释器的代码
只提供了20个用来匹配的输入值
令人意想不到的是
这个参数数量不匹配的问题
在传感器发布的测试、模板类型的压力测试
乃至生产环境几次部署IPC的过程中
都没有暴露，而之所以没有暴露
是因为在测试期间
以及一开始的IPC模板实例中
对第21项输入使用了正则表达式的通配符来匹配
2024年的7月19日
CrowdStrike部署了两个额外的IPC模板实例
其中一个
对第21个输入参数使用了非通配符匹配
这些新的模板实例又产生了新版本的通道文件291
因此需要传感器检查第21项输入参数
在将这个通道文件传送给传感器之前
原有通道版本中的IPC模板实例
从来没有使用过第21项的输入参数
虽然内容验证器对新的模板实例进行了评估
但是评估的前提
也是认为IPC模板类型能够提供第21项输入
于是，一旦收到带有问题的内容
新版本的通道文件291
就会导致数组越界读取的问题
因为操作系统发出的IPC通知
会对新的IPC模板实例与第21项输入值进行比较
而内容解释器只能处理20个值
所以在尝试访问第21个值的时候
就导致越界读取了输入数组的末尾
发生异常，从而导致系统崩溃
好了，以上就是CrowdStrike在RCA里
洋洋洒洒对问题原因的解释
其实简单说，就是两个关键点
一个是输入参数数量不匹配
一个是21，一个是20
这样的代码都能写得出来
显然是极度粗心
另一个就是竟然用正则表达式的通配符来匹配参数
当把通配符去掉之后
自然就匹配不上了
很显然
整个流程是没有经过详细和完整测试的
甚至可能就没打算好好测试
以大飞我十几年的开发经验来看
我并不认为这是个很难测试、或者说无法测试出来的问题
虽然最终看起来好像就是个数组越界的问题
但是实际上
暴露出来的是整个软件开发工程上的缺陷
所以大量网友对这个RCA的内容并不认可
CrowdStrike也是避重就轻
根本不谈自己为什么让这么低级的错误上线
还推送到全球几百万台电脑上
我们再来看看CrowdStrike是如何描述
自己是如何发现问题以及采取缓解措施的
按照RCA的内容
CrowdStrike认为自己有六点发现和动作
第一点
他们发现在传感器编译的时候
没有验证IPC模板类型中的字段数量
这个我们现在已经知道是问题的起因了
为此，在7月19日
CrowdStrike为用来验证输入数量的内容编译器
开发了一个补丁，并且在7月27日
作为CrowdStrike内部的构建工具
进行了生产环境部署
同时，这个内容编译器补丁还验证了
在其他任意平台上
都不可能存在提供不正确输入数量的模板类型
第二点
通道文件291上的内容解释器
缺少运行时对数组边界的检查机制
由于IPC模板类型只能生成20项的输入
因此使用非通配符的正则表达式
来匹配第21项输入
那么内容解释器就会越界读取输入数组
CrowdStrike认为这个情况并不属于写入任意内存的问题
并且已经过独立审查和确认
为此，在7月25日
CrowdStrike给检索输入字符串的内容解释器函数
添加了相应的边界检查
同时添加了额外的检查
确保输入数组的大小与输入参数的数量相匹配
另外
CrwodStrike还更新了定义IPC模板类型的传感器代码
重新提供了正确的21个输入参数
这个版本将于8月9日正式发布
第三点，模板类型的测试
应该覆盖更广的匹配范围
在之前
CrowdStrike只是对模板类型的功能进行了重点测试
包括手动与自动化测试
其中，在自动化测试当中
CrowdStrike选择了12个静态测试用例
并且验证了是否能够正确创建检测报警
而通道文件中的数据选择
是以手动测试的方式完成的
并且在所有模板实例的第21个字段中
包含了使用通配符的正则表达式
这样即使是只有20项输入
也不会导致内容解释器出现越界读取
而这回
CrowdStrike为不使用通配符的字段匹配
也增加了自动化测试流程
算是增加了测试的覆盖率
而且现有的所有模板类型
以及以后增加的模板类型
都必须要通过这个自动化测试
第四点
内容验证器中包含有逻辑错误
假设了IPC模板类型一定会提供第21项输入
目前，内容验证器的代码已经被修正
确保不会去匹配比输入数量更多的参数
这项修复将于2024年8月19日之前
发布到生产环境
第5点，应该增加对模板实例的验证
并且涵盖内容解释器内部的测试
CrowdStrike表示
虽然发布的模板类型经过了压力测试
但是并没有发现
把IPC模板类型提供给内容解释器的时候
会因为输入数量不匹配而导致系统崩溃
为此
CrowdStrike更新了内容配置系统的测试程序
也就是说，在更新IPC模板类型之后
要对发布程序进行测试
第6点，模板实例应该分阶段部署
CrowdStrike并没有很详细地描述这一点
而是直接给出了缓解措施
也是更新内容配置系统
增加了额外的部署与验收检查
同时让客户可以控制是否要部署快速响应的内容更新
以上就是CrowdStrike针对这个bug给出的修正方案了
对于整个RCA，大飞我想说
这其实不能叫做一份RCA
因为它只是说了发生了什么
CrowdStrike用一份长达12页的报告
只是为了向全球用户说明
由于正则表达式的通配符匹配失败
导致了数组访问异常
实际上
一份专业的RCA应该告诉我们为什么会发生
你不能只说，我们有一个bug
这还用说么，当然有一个bug
但是应该解释一下
这个bug是如何被泄露到全球的
究竟是开发实践和流程的哪个环节出了问题
以及为什么这个bug会泄露到生产环境
如果有过软件开发经验的朋友其实不难感觉到
这次的全球蓝屏事件
其实根本不在这个数组越界的bug上
而是整个开发、测试、灰度发布、回滚等整套部署机制出了问题
甚至连应对问题的安全预案和回滚策略都没有
也就是第六点发现才是关键
但是CrowdStrike恰恰避开不谈
如此低级却影响广泛的bug
我不相信专业的测试人员测不出来
甚至稍微拿自己的电脑更新一下
就能发现这个必现的问题
所以真正的问题根源
CrowdStrike要不就是不敢说
要不就是不想说
这样的态度也令人心寒
这个RCA用网友们的精辟总结就是
根本原因
没有测试
解决方案
下次确保在发布前进行测试
而对于CrowdStrike打出的感情牌
说对于任何仍受影响的客户
在所有系统恢复之前
自己都不会休息
显然网友们也并不买单
直接回复
你们应该退出这个行业，就这么简单
还有网友嘲讽道，明白了
CrowdStrike针对通道文件291的测试和部署流程
是基于一种称为‘希望与梦想’的算法来运作的
也有网友表示了对CrowdStrike的担心
说道
他们在内核级代码中使用正则表达式让我感到害怕
甚至一想到是他们在‘保护’着选举服务器
就不寒而栗
对于CrowdStrike的这起全球宕机事件
我想说的是
如果一直以这种态度来对待客户、对待自己
估计下一次的全球宕机也不会太远的
感谢大家观看本期视频
我们下期再见
