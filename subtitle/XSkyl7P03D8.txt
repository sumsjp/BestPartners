大家好
这里是最佳拍档
我是大飞
上周五呢
微软给office全家桶
都加上了GPT-4的功能
并且带来了焕然一新的产品
Microsoft 365 Copilot
而作为第一个吃螃蟹的Github Copilot
又怎么能在这次浪潮中
少了它的身影呢
昨天晚上Github官方发布推特宣布
一款基于AI驱动的
跨时代的代码编辑器
Github Copilot X横空出世
将为开发者带来前所未有的编程体验
上一代的Github Copilot呢
在协助开发者完成编程任务的时候
就有着极其出色的体验
诞生到现在两年了
已经自动生成了46%的代码
更是将编程的速度提高了55%
这一次更新的Github Copilot X
又给我们带来了哪些惊喜呢
我们先来总结一下
第一点集成了GPT-4
没办法
谁让现在Github是微软的亲儿子呢
必须给安排上
第二点 Github Copilot Chat
你能够边写代码边跟AI对话
第三个 Copilot for Pull Requests
让AI来协助处理PR
第四个 Copilot for docs
基于AI的智能文档系统
第5个 Copilot for CLI
让命令行用起来更加的智能
第6个 Copilot Voice
接通过语音来生成代码
以后的程序员呢
写代码不再靠手了
而是靠嘴了
接下来呢
我们来逐个看一看
对于一个开发者来说
这些功能到底有多震撼
第一个Github Copilot Chat
相信大家最近这些日子呢
对于ChatGPT以及Bing Chat的
真实实力应该是不需要再怀疑了
那么如果把它们的功能都加到
Github Copilot上呢
没错这次Github Copilot X
就在产品中内置了一个聊天的窗口
把GPT-4加入到了实际的开发场景中
并且集成到了VSCode和Visual Studio上
这个聊天窗口呢可不简单
除了可以进行实时的交互问答之外
它还可以完成像代码内容识别
报错信息显示 语音交流等等操作
通过这个功能呢
开发人员可以更深入的分析和了解
各个代码的用途
快速的生成单元测试
甚至还能一键修改bug
就问你猛不猛吧
未来呢
可能我们就不需要一行行的去
看代码 找bug 写测试了
直接用Github Copilot Chat
就能够快速的都把这些工作处理掉了
第二个 Copilot for Pull Requests
如果你维护过开源的项目
或者用Git进行过团队协作
那么你应该知道规范化的提交pull request
也就是PR
对于一个项目的开发者来说
到底有多重要
一个清晰简洁的PR描述信息
能够让代码的审查者一目了然
快速的了解到你的代码变动的情况
减少项目合并出错的风险
并且提高沟通的效率
这次Copilot X引入了GPT-4的模型
可以通过
动态提取与分析代码的变更信息
来自动的生成描述
开发者人员呢
只需要在PR的描述中插入标记
Copilot的就能够自动识别
并且进行扩展补写
支持的标记呢主要有以下几种
第一个copilot:summary
可以为PR生成一段摘要的总结
第二个copilot:walkthrough
生成详细的代码更改列表
包括相关的代码片段链接
第3个 copilot:poem
写一首诗来描述本次的改动
感觉这个功能有点搞啊
第4个 copilot:all
自动生成以上的所有内容
随着后续产品的更新迭代呢
Copilot还会新增名为Gentest和
Ghost text的两大功能
其中Gentest
可以通过AI来识别PR中
可能缺少的测试
并且自动的帮你构建和生成测试
而Ghost Text呢
可以在你编写PR描述或者文档的时候
提供内容的自动补全的功能
不仅如此呢
当你收到用户提交的issue时
如果没有比较好的解决方案
AI还会给你提供建议
如果你连审查代码也觉得麻烦呢
AI也能够协助你
估计再过不久啊
AI就要帮助你自动的调整代码
完善PR 修改bug了
说白了这货要开始抢你的饭吃了
第3个 Copilot for docs
文档对于一个开发者而言
其重要性不言而喻
无论你是新接手一个项目
还是忘记了某个API的具体使用办法
那这个时候呢
你都会非常的希望
有一个优秀的技术文档出现在面前
所以呢
为了帮助你更快的定位文档的内容
简洁直接的获取到你想要的信息
Copilot for docs就应运而生了
用户呢
能够通过类似于ChatGPT的界面
针对于项目的文档
常用代码等内容发起提问
实时的获取答案
你需要做的呢
只是在输入框中
写下你想要了解的问题
按下回车
Copilot就会自动的定位到
并且返回文档中的相关内容
还有个比较厉害的地方呢
就是它能够根据用户不同的编程水平
对文档的不同的理解程度
以及你想要知道内容
返回不同的答案
如果需要的话呢
它还可以在各个
第三方库的文档之间来回查找
将内容进行拼接
然后给你返回内容
感觉大家可以把这个Copilot for docs
当做一个知识库来用
第四个 Copilot for CLI
也就是command line
除了上面提到这些
处理PR 编写代码的工作之外呢
命令行终端也就是command line
也是开发者日常工作必不可少的工具之一
我也经常喜欢在这个ITerm上呢
安装各种各样的命令行的生产力工具
这些工具呢
在大多的时候
能够帮我高效的处理掉一些问题
但是有些比较少用到的工具
经常也会忘掉它们的命令
一般这个时候呢我们都会输入help
来获取到关于该命令的更多的信息
对于一些功能较为复杂的
命令行工具来说
我还得时不时的去Google
或者stackoverflow一下
不过呢以后的就不需要了
Copilot for CLI提供了三个新的shell命令
分别是?? git? 和 gh?
??呢可以作为任何shell命令的
通用的go to
你只需要在这个命令的后面呢
输入相关的描述
Copilot就会列出跟描述最匹配的命令
比如
你不知道如何列出所有的javascript文件
那么你只需要输入
?? list js file
AI就会给你提供可以参考的命令
以及描述
如果你不满意呢
你还可以进一步的更改描述
确定之后呢
在命令行终端选中run this command
然后按下回车就可以了
git? 这个命令呢
是专门用来搜索和调用Git的
相比??呢
它在生成Git命令方面呢要强大很多
如果你明确要使用的是Git命令
那就可以优先选择使用这个
gh?呢
结合了Github CLI命令的灵活性
以及查询界面的便捷性
让搜索可以变得更加快捷
信息展示的更加清晰
虽然Github Copilot CLI的大部分场景呢
主要集中在Git以及Github上
但是与AI相结合之后呢
它的互动性和连贯性
都得到了进一步的提升
这种方式呢
相信也能够给
其他的命令行工具的开发者
提供一些参考思路
第五个 Copilot Voice
我还记得前几年啊
这个Github Copilot刚出来的时候
网上就有人讨论
AI这么牛逼
以后是不是可以只动动嘴皮子
它就能帮我写出想要的代码了
估计大家都没有想到
是这一天来的这么快
现在呢 Copilot Voice出现了
用户通过与Github Copilot的交谈
它就能够立即开始编写代码
直接解放你的双手
不满意的话呢还可以接着说话
接着让它进行更改
通过对话呢
Copilot Voice可以完成以下这些工作
第一点 代码跳转
比如说跳转到代码的某一行
某个方法或者跳转到某个函数
第二个 控制IDE
你可以开启zen模式运行程序
或者运行其他的VSCode的指令
第三个代码总结
你可以问它
第3行到第10行的这个代码
表示什么意思
所有这些工作呢张张嘴你就能搞定
Linux的创始人Linus Torvalds曾经说过
Talk is cheap, show me the code
这一次呢全都有了
这次发布的Github Copilot X
围绕着AI对话
pull request的提交处理
文档智能检索与阅读
命令行改造以及最后的语音生成代码
几乎可以说是全方位的
颠覆了传统的编程方式
当AI能够准确理解人类的自然语言
学会从0到1完成项目的设计
开发部署等等工作的时候
未来程序员这个群体啊
或许就跟电报员一样
成为了某个曾经在历史上出现过的
普通工种了
之前我们做过一期节目
国外有人说
程序员会在3年内被AI取代
我当时还觉得有点言过其实
今天看了这个Copilot X
我觉得还是有点太保守了
可能3年都用不了
也许在将来的某一天
当你突然心血来潮
想开发一个程序的时候
只需要像现在跟iPhone的Siri对话一样
喊一声 嘿 Github
AI就能帮你完成一切了
好了今天的分享就到这里
感兴趣的小伙伴
欢迎关注我们的频道
我们下次再见
